<?php

/**
 * @file
 * Install, update and uninstall functions for the database_sanitize module.
 */

use Symfony\Component\Yaml\Yaml;

/**
 * Implements hook_requirements().
 */
function database_sanitize_requirements($phase) {
  $requirements = [];

  if ($phase == 'runtime') {
    $requirements['database_sanitize'] = [
      'title' => t('Database Sanitize'),
    ];
    module_load_include('inc', 'database_sanitize', 'inc/database_sanitize');
    $merge_file_content = database_sanitize_get_yml_file_content();
    try {
      $parsed_file = Yaml::parse($merge_file_content);
    }
    catch (Exception $exception) {
      $requirements['database_sanitize']['value'] = "Unable to parse the sanitize files as YAML.";
      $requirements['database_sanitize']['severity'] = REQUIREMENT_ERROR;

      return $requirements;
    }

    if (!$parsed_file) {
      $requirements['database_sanitize']['value'] = "There are no database_sanitize.yml files available.";
      $requirements['database_sanitize']['severity'] = REQUIREMENT_WARNING;

      return $requirements;
    }

    // Find tables existing on the database that are not defined in the sanitize
    // yaml file.
    if (is_null($parsed_file) || !array_key_exists('sanitize', $parsed_file)) {
      $requirements['database_sanitize']['value'] = "The sanitize YML file does not define a 'sanitize' key.";
      $requirements['database_sanitize']['severity'] = REQUIREMENT_ERROR;

      return $requirements;
    }

    if (empty($parsed_file['sanitize'])) {
      $requirements['database_sanitize']['value'] = "No tables are defined in sanitize YML files.";
      $requirements['database_sanitize']['severity'] = REQUIREMENT_WARNING;

      return $requirements;
    }

    // Catch MySQL error on SHOW TABLES query.
    try {
      $db_tables = db_query('SHOW TABLES')->fetchCol();
    }
    catch (PDOException $e) {
      $requirements['database_sanitize']['value'] = "Error while trying to run 'SHOW TABLES' query: " . $e->getMessage();
      $requirements['database_sanitize']['severity'] = REQUIREMENT_ERROR;

      return $requirements;
    }

    $yml_tables = [];
    foreach ($parsed_file['sanitize'] as $machine_name => $tables) {
      foreach ($tables as $table_name => $definition) {
        if (is_array($definition) && !empty(array_filter($definition)) && !array_key_exists('query', $definition)) {
          $requirements['database_sanitize']['value'] = "The table '{$table_name}' defined by '{$machine_name}' does not specify a 'query' key.";
          $requirements['database_sanitize']['severity'] = REQUIREMENT_ERROR;

          return $requirements;
        }

        if (is_array($definition) && !empty(array_filter($definition)) && !array_key_exists('description', $definition)) {
          $requirements['database_sanitize']['value'] = "The table '{$table_name}' defined by '{$machine_name}' does not specify a 'description' key.";
          $requirements['database_sanitize']['severity'] = REQUIREMENT_ERROR;

          return $requirements;
        }

        if (!in_array($table_name, $yml_tables)) {
          array_push($yml_tables, $table_name);
        }
      }
    }

    $missing = array_diff($db_tables, $yml_tables);
    if (is_array($missing) && empty($missing)) {
      $requirements['database_sanitize']['value'] = "All database tables are already specified in sanitize YML files.";
      $requirements['database_sanitize']['severity'] = REQUIREMENT_OK;

      return $requirements;
    }

    sort($missing);

    $requirements['database_sanitize']['value'] = count($missing) . ' tables not defined in sanitize YML files.';
    $requirements['database_sanitize']['description'] = implode(', ', $missing);
    $requirements['database_sanitize']['severity'] = REQUIREMENT_ERROR;
  }

  return $requirements;
}
