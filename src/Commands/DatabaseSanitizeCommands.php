<?php

namespace Drupal\database_sanitize\Commands;

use Drupal\database_sanitize\DatabaseSanitize;
use Drush\Commands\DrushCommands;

/**
 * Drush commands for Database Sanitize.
 */
class DatabaseSanitizeCommands extends DrushCommands {

  /**
   * The sanitizer service instance.
   *
   * @var \Drupal\database_sanitize\DatabaseSanitize
   */
  protected $sanitizer;

  /**
   * DatabaseSanitizeCommands constructor.
   *
   * @param \Drupal\database_sanitize\DatabaseSanitize $sanitizer
   */
  public function __construct(DatabaseSanitize $sanitizer) {
    $this->sanitizer = $sanitizer;
  }

  /**
   * Analyze existing yml files.
   *
   * Compares existing database.sanitize.yml files on the site installation
   * against existing database tables.
   *
   * @param array $options
   *   An associative array of options whose values come from cli, aliases,
   *   config, etc.
   *
   * @option file
   *   The full path to a sanitize YML file.
   * @option list
   *   List the table names.
   *
   * @command db:sanitize-analyze
   * @aliases dbsa,db-sanitize-analyze
   *
   * @throws \Exception
   */
  public function analyze(array $options = ['file' => NULL, 'list' => NULL]) {
    $file = $options['file'];
    if (!empty($file) && !file_exists($file)) {
      throw new \Exception(dt('File @file does not exist', ['@file' => $file]));
    }

    $missing_tables = $this->sanitizer->getUnspecifiedTables($file);
    
    if (!$missing_tables) {
      $this->logger()->notice('All database tables are already specified in sanitize YML files');
      return;
    }

    $this->logger()->warning(dt('There are @count tables not defined on sanitize YML files', ['@count' => count($missing_tables)]));

    if (!empty($options['list'])) {
      $this->logger()->warning((implode("\n", $missing_tables)));
    }
  }

  /**
   * Generates Sanitization entries for tables not specified on sanitize YML files..
   *
   * @param array $options
   *   An associative array of options whose values come from cli, aliases,
   *   config, etc.
   *
   * @option file
   *   The full path to a sanitize YML file.
   * @option machine-name
   *   The machine name to export the tables under.
   *
   * @command db:sanitize-generate
   * @aliases dbsg,db-sanitize-generate
   *
   * @return Consolidation\OutputFormatters\Formatters\YamlFormatter
   *
   * @throws \Exception
   */
  public function generate(array $options = ['file' => NULL, 'machine-name' => NULL]) {
    $machine_name = $options['machine-name'];
    if (empty($machine_name)) {
      $machine_name = $this->io()->ask('Please provide the machine name to export the tables under');
    }

    if (empty($options['file'])) {
      $options['file'] = $this->io()->ask('Please provide the full path to a sanitize YML file');
    }

    $yml_file_path = $options['file'];
    $missing_tables = $this->sanitizer->getUnspecifiedTables($yml_file_path);
    if (!$missing_tables) {
      $this->logger()->notice((dt('All database tables are already specified in sanitize YML files')));
      return [];
    }

    $content = [
      'sanitize' => [
        $machine_name => [],
      ],
    ];
    foreach ($missing_tables as $table) {
      $content['sanitize'][$machine_name][$table] = [
        'description' => "Sanitization entry for {$table}. Generated by drush db-sanitize-generate.",
        'query' => "TRUNCATE TABLE {$table}",
      ];
    }

    return $content;
  }

}
